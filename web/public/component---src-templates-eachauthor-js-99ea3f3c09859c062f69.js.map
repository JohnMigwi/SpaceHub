{"version":3,"file":"component---src-templates-eachauthor-js-99ea3f3c09859c062f69.js","mappings":"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","sources":["webpack://spacehub/./src/styles/PageSpaceStyles.js","webpack://spacehub/./src/components/PageSpace.js","webpack://spacehub/./src/styles/blog/BlogGridStyles.js","webpack://spacehub/./src/styles/blog/BlogItemStyles.js","webpack://spacehub/./src/components/blog/BlogItem.js","webpack://spacehub/./src/components/blog/BlogGrid.js","webpack://spacehub/./src/styles/author/SingleAuthorStyles.js","webpack://spacehub/./src/templates/Eachauthor.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageSpaceStyles = styled.div`\n  padding-top: ${(props) => props.top || 100}px;\n  padding-bottom: ${(props) => props.bottom || 100}px;\n`;\n","import React from 'react';\r\nimport { PageSpaceStyles } from '../styles/PageSpaceStyles';\r\n\r\nfunction PageSpace({ children, top, bottom }) {\r\n  return (\r\n    <PageSpaceStyles top={top} bottom={bottom}>\r\n      {children}\r\n    </PageSpaceStyles>\r\n  );\r\n}\r\n\r\nexport default PageSpace;\r\n","import styled from 'styled-components';\n\nexport const BlogGridStyles = styled.div`\n  margin-top: 3.5rem;\n  display: grid;\n  gap: 5rem;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 3rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const BlogItemStyles = styled.div`\n  display: inline-block;\n  border-radius: 12px;\n  .img {\n    height: 250px;\n    margin-bottom: 1.5rem;\n    border-radius: 12px;\n    transition: 0.3s ease-in-out transform;\n  }\n  .title {\n    margin-bottom: 0.5rem;\n  }\n  .publishedAt {\n    margin-bottom: 0.3rem;\n  }\n  &:hover {\n    .img {\n      transform: scale(1.05);\n    }\n  }\n  .categoriesText {\n    a {\n      color: var(--gray);\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    .title {\n      margin-bottom: 0.5rem;\n    }\n  }\n`;\n","import { Link } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\nimport { format } from 'date-fns';\r\nimport React from 'react';\r\nimport { BlogItemStyles } from '../../styles/blog/BlogItemStyles';\r\nimport ParagraphText from '../typography/ParagraphText';\r\nimport { Title } from '../typography/Title';\r\n\r\nfunction BlogItem({ path, title, image, categories, publishedAt }) {\r\n  return (\r\n    <BlogItemStyles>\r\n      <Link to={`/blogs/${path}`}>\r\n        <GatsbyImage\r\n          image={image.imageData}\r\n          alt={image.altText}\r\n          className=\"img\"\r\n        />\r\n      </Link>\r\n      <Link to={`/blogs/${path}`}>\r\n        <Title className=\"title\">{title}</Title>\r\n      </Link>\r\n      {publishedAt && (\r\n        <ParagraphText className=\"publishedAt\">\r\n          {format(new Date(publishedAt), 'p, MMMM dd, yyyy')}\r\n        </ParagraphText>\r\n      )}\r\n      <ParagraphText className=\"categoriesText\">\r\n        {categories.map((item, index) => (\r\n          <span key={item.slug.current}>\r\n            <Link to={`/categories/${item.slug.current}`}>{item.title}</Link>\r\n            {index < categories.length - 1 ? ', ' : ''}\r\n          </span>\r\n        ))}\r\n      </ParagraphText>\r\n    </BlogItemStyles>\r\n  );\r\n}\r\nexport default BlogItem;\r\n","import React from 'react';\r\nimport { BlogGridStyles } from '../../styles/blog/BlogGridStyles';\r\nimport BlogItem from './BlogItem';\r\n\r\nfunction BlogGrid({ blogs }) {\r\n  return (\r\n    <BlogGridStyles>\r\n      {blogs &&\r\n        blogs.map((blog) => (\r\n          <BlogItem\r\n            key={blog.id}\r\n            path={blog.slug.current}\r\n            title={blog.title}\r\n            categories={blog.categories}\r\n            image={{\r\n              imageData: blog.coverImage.asset.gatsbyImageData,\r\n              altText: blog.coverImage.alt,\r\n            }}\r\n            publishedAt={blog.publishedAt}\r\n          />\r\n        ))}\r\n    </BlogGridStyles>\r\n  );\r\n}\r\n\r\nexport default BlogGrid;\r\n","import styled from 'styled-components';\n\nexport const SingleAuthorStyles = styled.div`\n  .author-header {\n    text-align: center;\n  }\n  .profileImage {\n    height: 150px;\n    width: 150px;\n    margin: 0 auto;\n    border-radius: 50%;\n    margin-bottom: 2rem;\n  }\n  .name {\n    margin-bottom: 1rem;\n  }\n  .bio {\n    margin: 0 auto;\n    max-width: 500px;\n  }\n  .hr {\n    margin: 3rem 0;\n    color: var(--gray);\n  }\n`;\n","import { graphql } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\nimport React from 'react';\r\nimport BlogGrid from '../components/blog/BlogGrid';\r\nimport MyPortableText from '../components/MyPortableText';\r\nimport PageSpace from '../components/PageSpace';\r\nimport SEO from '../components/seo';\r\nimport { Title } from '../components/typography/Title';\r\nimport { SingleAuthorStyles } from '../styles/author/SingleAuthorStyles';\r\n\r\nexport const authorQuery = graphql`\r\n  query SingleAuthorQuery($id: String!) {\r\n    sanityAuthor(id: { eq: $id }) {\r\n      name\r\n      _rawBio\r\n      profileImage {\r\n        asset {\r\n          gatsbyImageData\r\n        }\r\n        alt\r\n      }\r\n    }\r\n    allSanityBlog(filter: { author: { id: { eq: $id } } }) {\r\n      nodes {\r\n        id\r\n        title\r\n        slug {\r\n          current\r\n        }\r\n        categories {\r\n          title\r\n          slug {\r\n            current\r\n          }\r\n        }\r\n        coverImage {\r\n          alt\r\n          asset {\r\n            gatsbyImageData\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SingleAuthor({ data }) {\r\n  const author = data.sanityAuthor;\r\n  const blogs = data.allSanityBlog.nodes;\r\n  return (\r\n    <PageSpace top={80} bottom={100}>\r\n      <SEO title={author.name} />\r\n      <div className=\"container\">\r\n        <SingleAuthorStyles>\r\n          <div className=\"author-header\">\r\n            <GatsbyImage\r\n              image={author.profileImage.asset.gatsbyImageData}\r\n              alt={author.profileImage.alt}\r\n              className=\"profileImage\"\r\n            />\r\n            <Title className=\"name\">{author.name}</Title>\r\n            <div className=\"bio\">\r\n              <MyPortableText value={author._rawBio} />\r\n            </div>\r\n          </div>\r\n          <hr className=\"hr\" />\r\n          <BlogGrid blogs={blogs} />\r\n        </SingleAuthorStyles>\r\n      </div>\r\n    </PageSpace>\r\n  );\r\n}\r\n\r\nexport default SingleAuthor;\r\n"],"names":["PageSpaceStyles","styled","div","withConfig","displayName","componentId","props","top","bottom","_ref","children","React","BlogGridStyles","BlogItemStyles","path","title","image","categories","publishedAt","Link","to","GatsbyImage","imageData","alt","altText","className","Title","ParagraphText","format","Date","map","item","index","key","slug","current","length","blogs","blog","BlogItem","id","coverImage","asset","gatsbyImageData","SingleAuthorStyles","data","author","sanityAuthor","allSanityBlog","nodes","PageSpace","SEO","name","profileImage","MyPortableText","value","_rawBio","BlogGrid"],"sourceRoot":""}