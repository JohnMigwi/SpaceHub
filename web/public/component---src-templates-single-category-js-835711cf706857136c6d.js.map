{"version":3,"file":"component---src-templates-single-category-js-835711cf706857136c6d.js","mappings":"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","sources":["webpack://spacehub/./src/styles/PageHeaderStyles.js","webpack://spacehub/./src/components/PageHeader.js","webpack://spacehub/./src/styles/PageSpaceStyles.js","webpack://spacehub/./src/components/PageSpace.js","webpack://spacehub/./src/styles/blog/BlogGridStyles.js","webpack://spacehub/./src/styles/blog/BlogItemStyles.js","webpack://spacehub/./src/components/blog/BlogItem.js","webpack://spacehub/./src/components/blog/BlogGrid.js","webpack://spacehub/./src/styles/category/SingleCategoryStyles.js","webpack://spacehub/./src/templates/SingleCategory.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageHeaderStyles = styled.div`\n  margin: 3rem 0;\n  max-width: 400px;\n`;\n","import React from 'react';\r\nimport { PageHeaderStyles } from '../styles/PageHeaderStyles';\r\nimport ParagraphText from './typography/ParagraphText';\r\nimport { SectionTitle } from './typography/Title';\r\n\r\nfunction PageHeader({ title, description, children, className }) {\r\n  return (\r\n    <div className={className}>\r\n      <PageHeaderStyles>\r\n        <SectionTitle>{title}</SectionTitle>\r\n        <ParagraphText>{description}</ParagraphText>\r\n        {children}\r\n      </PageHeaderStyles>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import styled from 'styled-components';\n\nexport const PageSpaceStyles = styled.div`\n  padding-top: ${(props) => props.top || 100}px;\n  padding-bottom: ${(props) => props.bottom || 100}px;\n`;\n","import React from 'react';\r\nimport { PageSpaceStyles } from '../styles/PageSpaceStyles';\r\n\r\nfunction PageSpace({ children, top, bottom }) {\r\n  return (\r\n    <PageSpaceStyles top={top} bottom={bottom}>\r\n      {children}\r\n    </PageSpaceStyles>\r\n  );\r\n}\r\n\r\nexport default PageSpace;\r\n","import styled from 'styled-components';\n\nexport const BlogGridStyles = styled.div`\n  margin-top: 3.5rem;\n  display: grid;\n  gap: 5rem;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 3rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const BlogItemStyles = styled.div`\n  display: inline-block;\n  border-radius: 12px;\n  .img {\n    height: 250px;\n    margin-bottom: 1.5rem;\n    border-radius: 12px;\n    transition: 0.3s ease-in-out transform;\n  }\n  .title {\n    margin-bottom: 0.5rem;\n  }\n  .publishedAt {\n    margin-bottom: 0.3rem;\n  }\n  &:hover {\n    .img {\n      transform: scale(1.05);\n    }\n  }\n  .categoriesText {\n    a {\n      color: var(--gray);\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    .title {\n      margin-bottom: 0.5rem;\n    }\n  }\n`;\n","import { Link } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\nimport { format } from 'date-fns';\r\nimport React from 'react';\r\nimport { BlogItemStyles } from '../../styles/blog/BlogItemStyles';\r\nimport ParagraphText from '../typography/ParagraphText';\r\nimport { Title } from '../typography/Title';\r\n\r\nfunction BlogItem({ path, title, image, categories, publishedAt }) {\r\n  return (\r\n    <BlogItemStyles>\r\n      <Link to={`/blogs/${path}`}>\r\n        <GatsbyImage\r\n          image={image.imageData}\r\n          alt={image.altText}\r\n          className=\"img\"\r\n        />\r\n      </Link>\r\n      <Link to={`/blogs/${path}`}>\r\n        <Title className=\"title\">{title}</Title>\r\n      </Link>\r\n      {publishedAt && (\r\n        <ParagraphText className=\"publishedAt\">\r\n          {format(new Date(publishedAt), 'p, MMMM dd, yyyy')}\r\n        </ParagraphText>\r\n      )}\r\n      <ParagraphText className=\"categoriesText\">\r\n        {categories.map((item, index) => (\r\n          <span key={item.slug.current}>\r\n            <Link to={`/categories/${item.slug.current}`}>{item.title}</Link>\r\n            {index < categories.length - 1 ? ', ' : ''}\r\n          </span>\r\n        ))}\r\n      </ParagraphText>\r\n    </BlogItemStyles>\r\n  );\r\n}\r\nexport default BlogItem;\r\n","import React from 'react';\r\nimport { BlogGridStyles } from '../../styles/blog/BlogGridStyles';\r\nimport BlogItem from './BlogItem';\r\n\r\nfunction BlogGrid({ blogs }) {\r\n  return (\r\n    <BlogGridStyles>\r\n      {blogs &&\r\n        blogs.map((blog) => (\r\n          <BlogItem\r\n            key={blog.id}\r\n            path={blog.slug.current}\r\n            title={blog.title}\r\n            categories={blog.categories}\r\n            image={{\r\n              imageData: blog.coverImage.asset.gatsbyImageData,\r\n              altText: blog.coverImage.alt,\r\n            }}\r\n            publishedAt={blog.publishedAt}\r\n          />\r\n        ))}\r\n    </BlogGridStyles>\r\n  );\r\n}\r\n\r\nexport default BlogGrid;\r\n","import styled from 'styled-components';\n\nexport const SingleCategoryStyles = styled.div`\n  .pageHeader {\n    position: relative;\n    padding: 2rem 0;\n    z-index: 1;\n    &:after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: linear-gradient(90deg, #0d121f, #0d121fe0 30%, #4a46eb14);\n      z-index: -1;\n    }\n    .coverImage {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: -1;\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    .pageHeader {\n      padding: 0;\n      &:after {\n        display: none;\n      }\n    }\n    .coverImage {\n      display: none;\n    }\n  }\n`;\n","import { graphql } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\nimport React from 'react';\r\nimport BlogGrid from '../components/blog/BlogGrid';\r\nimport MyPortableText from '../components/MyPortableText';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSpace from '../components/PageSpace';\r\nimport SEO from '../components/seo';\r\nimport { SingleCategoryStyles } from '../styles/category/SingleCategoryStyles';\r\n\r\nexport const query = graphql`\r\n  query SingleCategory($id: String!) {\r\n    sanityCategory(id: { eq: $id }) {\r\n      title\r\n      _rawDescription\r\n      coverImage {\r\n        asset {\r\n          gatsbyImageData\r\n        }\r\n        alt\r\n      }\r\n    }\r\n    allSanityBlog(filter: { categories: { elemMatch: { id: { eq: $id } } } }) {\r\n      nodes {\r\n        id\r\n        title\r\n        slug {\r\n          current\r\n        }\r\n        categories {\r\n          title\r\n          slug {\r\n            current\r\n          }\r\n        }\r\n        coverImage {\r\n          alt\r\n          asset {\r\n            gatsbyImageData\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SingleCategory({ data }) {\r\n  const category = data.sanityCategory;\r\n  const blogs = data.allSanityBlog.nodes;\r\n\r\n  return (\r\n    <PageSpace top={80} bottom={100}>\r\n      <SingleCategoryStyles>\r\n        <div className=\"container\">\r\n          <SEO title={category.title} />\r\n          <PageHeader title={category.title} className=\"pageHeader\">\r\n            <MyPortableText value={category._rawDescription} />\r\n            <GatsbyImage\r\n              image={category.coverImage.asset.gatsbyImageData}\r\n              alt={category.coverImage.alt}\r\n              className=\"coverImage\"\r\n            />\r\n          </PageHeader>\r\n          <BlogGrid blogs={blogs} />\r\n        </div>\r\n      </SingleCategoryStyles>\r\n    </PageSpace>\r\n  );\r\n}\r\n\r\nexport default SingleCategory;\r\n"],"names":["PageHeaderStyles","styled","div","withConfig","displayName","componentId","_ref","title","description","children","className","React","SectionTitle","ParagraphText","PageSpaceStyles","props","top","bottom","BlogGridStyles","BlogItemStyles","path","image","categories","publishedAt","Link","to","GatsbyImage","imageData","alt","altText","Title","format","Date","map","item","index","key","slug","current","length","blogs","blog","BlogItem","id","coverImage","asset","gatsbyImageData","SingleCategoryStyles","data","category","sanityCategory","allSanityBlog","nodes","PageSpace","SEO","PageHeader","MyPortableText","value","_rawDescription","BlogGrid"],"sourceRoot":""}