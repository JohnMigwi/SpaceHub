{"version":3,"file":"component---src-pages-index-js-9c0ed7235bf9608f87ca.js","mappings":"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","sources":["webpack://spacehub/./src/styles/blog/BlogGridStyles.js","webpack://spacehub/./src/styles/blog/BlogItemStyles.js","webpack://spacehub/./src/components/blog/BlogItem.js","webpack://spacehub/./src/components/blog/BlogGrid.js","webpack://spacehub/./src/styles/buttons/ButtonStyles.js","webpack://spacehub/./src/components/buttons/Button.js","webpack://spacehub/./src/styles/category/CategoryGridStyles.js","webpack://spacehub/./src/styles/category/CategoryItemStyles.js","webpack://spacehub/./src/components/category/CategoryItem.js","webpack://spacehub/./src/components/category/CategoryGrid.js","webpack://spacehub/./src/constants/buttonTypes.js","webpack://spacehub/./src/styles/homePage/HeroSectionStyles.js","webpack://spacehub/./src/components/homepage/HeroSection.js","webpack://spacehub/./src/styles/homePage/FeaturedBlogsStyles.js","webpack://spacehub/./src/components/homepage/FeaturedBlogs.js","webpack://spacehub/./src/styles/homePage/TopCategoriesStyles.js","webpack://spacehub/./src/components/homepage/TopCategories.js","webpack://spacehub/./src/pages/index.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BlogGridStyles = styled.div`\n  margin-top: 3.5rem;\n  display: grid;\n  gap: 5rem;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 3rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const BlogItemStyles = styled.div`\n  display: inline-block;\n  border-radius: 12px;\n  .img {\n    height: 250px;\n    margin-bottom: 1.5rem;\n    border-radius: 12px;\n    transition: 0.3s ease-in-out transform;\n  }\n  .title {\n    margin-bottom: 0.5rem;\n  }\n  .publishedAt {\n    margin-bottom: 0.3rem;\n  }\n  &:hover {\n    .img {\n      transform: scale(1.05);\n    }\n  }\n  .categoriesText {\n    a {\n      color: var(--gray);\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    .title {\n      margin-bottom: 0.5rem;\n    }\n  }\n`;\n","import { Link } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\nimport { format } from 'date-fns';\r\nimport React from 'react';\r\nimport { BlogItemStyles } from '../../styles/blog/BlogItemStyles';\r\nimport ParagraphText from '../typography/ParagraphText';\r\nimport { Title } from '../typography/Title';\r\n\r\nfunction BlogItem({ path, title, image, categories, publishedAt }) {\r\n  return (\r\n    <BlogItemStyles>\r\n      <Link to={`/blogs/${path}`}>\r\n        <GatsbyImage\r\n          image={image.imageData}\r\n          alt={image.altText}\r\n          className=\"img\"\r\n        />\r\n      </Link>\r\n      <Link to={`/blogs/${path}`}>\r\n        <Title className=\"title\">{title}</Title>\r\n      </Link>\r\n      {publishedAt && (\r\n        <ParagraphText className=\"publishedAt\">\r\n          {format(new Date(publishedAt), 'p, MMMM dd, yyyy')}\r\n        </ParagraphText>\r\n      )}\r\n      <ParagraphText className=\"categoriesText\">\r\n        {categories.map((item, index) => (\r\n          <span key={item.slug.current}>\r\n            <Link to={`/categories/${item.slug.current}`}>{item.title}</Link>\r\n            {index < categories.length - 1 ? ', ' : ''}\r\n          </span>\r\n        ))}\r\n      </ParagraphText>\r\n    </BlogItemStyles>\r\n  );\r\n}\r\nexport default BlogItem;\r\n","import React from 'react';\r\nimport { BlogGridStyles } from '../../styles/blog/BlogGridStyles';\r\nimport BlogItem from './BlogItem';\r\n\r\nfunction BlogGrid({ blogs }) {\r\n  return (\r\n    <BlogGridStyles>\r\n      {blogs &&\r\n        blogs.map((blog) => (\r\n          <BlogItem\r\n            key={blog.id}\r\n            path={blog.slug.current}\r\n            title={blog.title}\r\n            categories={blog.categories}\r\n            image={{\r\n              imageData: blog.coverImage.asset.gatsbyImageData,\r\n              altText: blog.coverImage.alt,\r\n            }}\r\n            publishedAt={blog.publishedAt}\r\n          />\r\n        ))}\r\n    </BlogGridStyles>\r\n  );\r\n}\r\n\r\nexport default BlogGrid;\r\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { buttonType } from '../../constants/buttonTypes';\n\nexport const ButtonStyles = styled(Link)`\n  display: inline-block;\n  cursor: pointer;\n  outline: none;\n  border: none;\n  padding: 1rem 2rem;\n  border-radius: 4px;\n  font-size: 1.6rem;\n  background: ${({ variant }) =>\n    variant === buttonType.primary\n      ? 'linear-gradient(135deg, var(--secondary), var(--primary))'\n      : variant === buttonType.secondary\n      ? 'var(--white-1)'\n      : 'transparent'};\n  border: ${({ variant }) =>\n    variant === buttonType.outline ? '2px solid var(--primary)' : 'none'};\n  color: ${({ variant }) =>\n    variant === buttonType.secondary ? 'var(--black-1)' : 'var(--white)'};\n  @media only screen and (max-width: 768px) {\n    padding: 0.8rem 1.2rem;\n    font-size: 1.4rem;\n  }\n`;\n","import React from 'react';\r\nimport { buttonType } from '../../constants/buttonTypes';\r\nimport { ButtonStyles } from '../../styles/buttons/ButtonStyles';\r\n\r\nfunction Button({ children, tag, variant = buttonType.primary, ...props }) {\r\n  return (\r\n    <ButtonStyles as={tag} {...props} variant={variant}>\r\n      {children}\r\n    </ButtonStyles>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\n\nexport const CategoryGridStyles = styled.div`\n  display: grid;\n  margin-top: 3.5rem;\n  display: grid;\n  gap: 5rem;\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 2rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CategoryItemStyles = styled.div`\n  background: var(--black-1);\n  padding: 2rem;\n  border-radius: 12px;\n  .title {\n    margin-bottom: 1rem;\n  }\n  .text {\n    margin-bottom: 2rem;\n  }\n`;\n","import React from 'react';\r\nimport { CategoryItemStyles } from '../../styles/category/CategoryItemStyles';\r\nimport Button from '../buttons/Button';\r\nimport { Title } from '../typography/Title';\r\nimport MyPortableText from '../MyPortableText';\r\nimport { buttonType } from '../../constants/buttonTypes';\r\n\r\nfunction CategoryItem({ title, description, slug }) {\r\n  return (\r\n    <CategoryItemStyles>\r\n      <Title className=\"title\">{title}</Title>\r\n      <div className=\"text\">\r\n        <MyPortableText value={description} />\r\n      </div>\r\n      <Button to={`/categories/${slug.current}`} variant={buttonType.outline}>\r\n        Explore Category\r\n      </Button>\r\n    </CategoryItemStyles>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React from 'react';\r\nimport { CategoryGridStyles } from '../../styles/category/CategoryGridStyles';\r\nimport CategoryItem from './CategoryItem';\r\n\r\nfunction CategoryGrid({ category }) {\r\n  return (\r\n    <CategoryGridStyles>\r\n      {category.map((item) => (\r\n        <CategoryItem\r\n          key={item.id}\r\n          title={item.title}\r\n          description={item._rawDescription}\r\n          slug={item.slug}\r\n        />\r\n      ))}\r\n    </CategoryGridStyles>\r\n  );\r\n}\r\n\r\nexport default CategoryGrid;\r\n","export const buttonType = {\r\n  primary: 'primary',\r\n  secondary: 'secondary',\r\n  outline: 'outline',\r\n};\r\n","import styled from 'styled-components';\n\nexport const HeroSectionStyles = styled.div`\n  min-height: 80vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  .container {\n    height: 100%;\n  }\n  .hero__wrapper {\n    width: 100%;\n    height: 100%;\n    &::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 50%;\n      height: 100%;\n      background: linear-gradient(135deg, #030213, #08011c);\n      z-index: -1;\n    }\n    .left {\n      width: 50%;\n      padding: 50px 0;\n      .hero__heading {\n        max-width: 450px;\n        font-size: 4rem;\n        font-family: 'Poppins', sans-serif;\n        font-weight: '700';\n        margin: 0.2rem 0;\n      }\n      .hero__text {\n        max-width: 350px;\n      }\n      .hero__button {\n        margin-top: 1.5rem;\n      }\n    }\n    .right {\n      position: absolute;\n      right: 0;\n      top: 0;\n      width: 50%;\n      height: 100%;\n      .hero__image {\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    .hero__wrapper {\n      height: 100%;\n      display: flex;\n      align-items: flex-start;\n      justify-content: center;\n      flex-direction: column-reverse;\n      padding-top: 80px;\n      padding-bottom: 80px;\n      &::after {\n        width: 100%;\n      }\n      .right {\n        position: initial;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        .hero__image {\n          height: 300px;\n          margin: 0 auto;\n        }\n      }\n      .left {\n        width: 100%;\n        margin-top: 1rem;\n        padding: 0;\n        .hero__heading {\n          max-width: 330px;\n          font-size: 3rem;\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { StaticImage } from 'gatsby-plugin-image';\r\nimport { HeroSectionStyles } from '../../styles/homePage/HeroSectionStyles';\r\nimport ParagraphText from '../typography/ParagraphText';\r\nimport Button from '../buttons/Button';\r\n\r\nfunction HeroSection() {\r\n  return (\r\n    <HeroSectionStyles>\r\n      <div className=\"container\">\r\n        <div className=\"hero__wrapper\">\r\n          <div className=\"left\">\r\n            <h1 className=\"hero__heading\">Explore Space World</h1>\r\n            <ParagraphText className=\"hero__text\">\r\n              Get Some Coffee !\r\n            </ParagraphText>\r\n            <Button to=\"/blogs\" tag={Link} className=\"hero__button\">\r\n              All Blogs\r\n            </Button>\r\n          </div>\r\n          <div className=\"right\">\r\n            <StaticImage\r\n              className=\"hero__image\"\r\n              src=\"../../images/vr-guy.jpg\"\r\n              alt=\"vr guy\"\r\n              placeholder=\"blurred\"\r\n              objectPosition=\"50% 30%\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </HeroSectionStyles>\r\n  );\r\n}\r\n\r\nexport default HeroSection;\r\n","import styled from 'styled-components';\n\nexport const FeaturedBlogsStyles = styled.div`\n  padding: 5rem 0;\n  .featuredBlogs__text {\n    max-width: 450px;\n  }\n`;\n","import { graphql, useStaticQuery } from 'gatsby';\r\nimport React from 'react';\r\nimport { FeaturedBlogsStyles } from '../../styles/homePage/FeaturedBlogsStyles';\r\nimport ParagraphText from '../typography/ParagraphText';\r\nimport { SectionTitle } from '../typography/Title';\r\nimport BlogGrid from '../blog/BlogGrid';\r\n\r\nfunction FeaturedBlogs() {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allSanityFeatured(filter: { _id: { eq: \"featuredItems\" } }) {\r\n        nodes {\r\n          blogs {\r\n            id\r\n            title\r\n            categories {\r\n              title\r\n              slug {\r\n                current\r\n              }\r\n            }\r\n            coverImage {\r\n              alt\r\n              asset {\r\n                gatsbyImageData\r\n              }\r\n            }\r\n            slug {\r\n              current\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  const featuredBlogs = data.allSanityFeatured.nodes[0].blogs;\r\n  return (\r\n    <FeaturedBlogsStyles>\r\n      <SectionTitle>FeaturedBlogs</SectionTitle>\r\n      <ParagraphText className=\"featuredBlogs__text\">\r\n        as opposed to using 'Content here, content here', making it look like\r\n        readable\r\n      </ParagraphText>\r\n      <BlogGrid blogs={featuredBlogs} />\r\n    </FeaturedBlogsStyles>\r\n  );\r\n}\r\n\r\nexport default FeaturedBlogs;\r\n","import styled from 'styled-components';\n\nexport const TopCategoriesStyles = styled.div`\n  padding: 5rem 0;\n  .info {\n    max-width: 400px;\n  }\n`;\n","import { graphql, useStaticQuery } from 'gatsby';\r\nimport React from 'react';\r\nimport { TopCategoriesStyles } from '../../styles/homePage/TopCategoriesStyles';\r\nimport ParagraphText from '../typography/ParagraphText';\r\nimport { SectionTitle } from '../typography/Title';\r\nimport CategoryGrid from '../category/CategoryGrid';\r\n\r\nfunction TopCategories() {\r\n  const data2 = useStaticQuery(graphql`\r\n    {\r\n      allSanityFeatured(filter: { _id: { eq: \"featuredItems\" } }) {\r\n        nodes {\r\n          categories {\r\n            id\r\n            title\r\n            slug {\r\n              current\r\n            }\r\n            _rawDescription\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const category = data2.allSanityFeatured.nodes[0].categories;\r\n  return (\r\n    <TopCategoriesStyles>\r\n      <SectionTitle>Top Categories</SectionTitle>\r\n      <ParagraphText className=\"info\">All about Top categories</ParagraphText>\r\n      <CategoryGrid category={category} />\r\n    </TopCategoriesStyles>\r\n  );\r\n}\r\n\r\nexport default TopCategories;\r\n","import React from 'react';\r\nimport HeroSection from '../components/homepage/HeroSection';\r\nimport SEO from '../components/seo';\r\nimport FeaturedBlogs from '../components/homepage/FeaturedBlogs';\r\nimport TopCategories from '../components/homepage/TopCategories';\r\n\r\nconst IndexPage = () => (\r\n  <>\r\n    <SEO />\r\n    <HeroSection />\r\n    <div className=\"container\">\r\n      <FeaturedBlogs />\r\n      <TopCategories />\r\n    </div>\r\n  </>\r\n);\r\nexport default IndexPage;\r\n"],"names":["BlogGridStyles","styled","BlogItemStyles","path","title","image","categories","publishedAt","to","G","imageData","alt","altText","className","Title","ParagraphText","format","Date","map","item","index","key","slug","current","length","blogs","blog","id","coverImage","asset","gatsbyImageData","ButtonStyles","Link","variant","buttonType","children","tag","props","as","CategoryGridStyles","CategoryItemStyles","description","MyPortableText","value","Button","category","_rawDescription","primary","secondary","outline","HeroSectionStyles","S","src","placeholder","objectPosition","FeaturedBlogsStyles","featuredBlogs","useStaticQuery","allSanityFeatured","nodes","BlogGrid","TopCategoriesStyles","CategoryGrid"],"sourceRoot":""}