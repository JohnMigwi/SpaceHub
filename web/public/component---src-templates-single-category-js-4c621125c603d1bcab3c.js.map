{"version":3,"file":"component---src-templates-single-category-js-4c621125c603d1bcab3c.js","mappings":"uJAEaA,E,KAAmBC,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,oC,mBCe7B,MAZA,YAAkE,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAClD,OACE,uBAAKA,UAAWA,GACd,gBAACL,EAAD,KACE,gBAAC,IAAD,KAAeE,GACf,gBAACI,EAAA,EAAD,KAAgBH,GACfC,M,mECTIG,E,KAAkBN,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,6CACX,SAACO,GAAD,OAAWA,EAAMC,KAAO,OACrB,SAACD,GAAD,OAAWA,EAAME,QAAU,OCO/C,MARA,YAA+C,IAA1BN,EAAyB,EAAzBA,SAAUK,EAAe,EAAfA,IAAKC,EAAU,EAAVA,OAClC,OACE,gBAACH,EAAD,CAAiBE,IAAKA,EAAKC,OAAQA,GAChCN,K,0ECJMO,EAAiBV,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,qN,8BCAdW,EAAiBX,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,oY,mBCmC3B,MA7BA,YAAoE,IAAhDY,EAA+C,EAA/CA,KAAMX,EAAyC,EAAzCA,MAAOY,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,YAClD,OACE,gBAACJ,EAAD,KACE,gBAAC,KAAD,CAAMK,GAAE,UAAYJ,GAClB,gBAAC,EAAAK,EAAD,CACEJ,MAAOA,EAAMK,UACbC,IAAKN,EAAMO,QACXhB,UAAU,SAGd,gBAAC,KAAD,CAAMY,GAAE,UAAYJ,GAClB,gBAACS,EAAA,EAAD,CAAOjB,UAAU,SAASH,IAE3Bc,GACC,gBAACV,EAAA,EAAD,CAAeD,UAAU,gBACtBkB,EAAAA,EAAAA,GAAO,IAAIC,KAAKR,GAAc,qBAGnC,gBAACV,EAAA,EAAD,CAAeD,UAAU,kBACtBU,EAAWU,KAAI,SAACC,EAAMC,GAAP,OACd,wBAAMC,IAAKF,EAAKG,KAAKC,SACnB,gBAAC,KAAD,CAAMb,GAAE,eAAiBS,EAAKG,KAAKC,SAAYJ,EAAKxB,OACnDyB,EAAQZ,EAAWgB,OAAS,EAAI,KAAO,UCLpD,MArBA,YAA8B,IAAVC,EAAS,EAATA,MAClB,OACE,gBAACrB,EAAD,KACGqB,GACCA,EAAMP,KAAI,SAACQ,GAAD,OACR,gBAAC,EAAD,CACEL,IAAKK,EAAKC,GACVrB,KAAMoB,EAAKJ,KAAKC,QAChB5B,MAAO+B,EAAK/B,MACZa,WAAYkB,EAAKlB,WACjBD,MAAO,CACLK,UAAWc,EAAKE,WAAWC,MAAMC,gBACjChB,QAASY,EAAKE,WAAWf,KAE3BJ,YAAaiB,EAAKjB,oB,4IChBjBsB,E,KAAuBrC,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,oZCoEjC,MAxBA,YAAmC,IAATsC,EAAQ,EAARA,KAClBC,EAAWD,EAAKE,eAChBT,EAAQO,EAAKG,cAAcC,MAEjC,OACE,gBAACC,EAAA,EAAD,CAAWnC,IAAK,GAAIC,OAAQ,KAC1B,gBAAC4B,EAAD,KACE,uBAAKjC,UAAU,aACb,gBAAC,IAAD,CAAKH,MAAOsC,EAAStC,QACrB,gBAAC2C,EAAA,EAAD,CAAY3C,MAAOsC,EAAStC,MAAOG,UAAU,cAC3C,gBAACyC,EAAA,EAAD,CAAgBC,MAAOP,EAASQ,kBAChC,gBAAC,EAAA9B,EAAD,CACEJ,MAAO0B,EAASL,WAAWC,MAAMC,gBACjCjB,IAAKoB,EAASL,WAAWf,IACzBf,UAAU,gBAGd,gBAAC4C,EAAA,EAAD,CAAUjB,MAAOA","sources":["webpack://spacehub/./src/styles/PageHeaderStyles.js","webpack://spacehub/./src/components/PageHeader.js","webpack://spacehub/./src/styles/PageSpaceStyles.js","webpack://spacehub/./src/components/PageSpace.js","webpack://spacehub/./src/styles/blog/BlogGridStyles.js","webpack://spacehub/./src/styles/blog/BlogItemStyles.js","webpack://spacehub/./src/components/blog/BlogItem.js","webpack://spacehub/./src/components/blog/BlogGrid.js","webpack://spacehub/./src/styles/category/SingleCategoryStyles.js","webpack://spacehub/./src/templates/SingleCategory.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageHeaderStyles = styled.div`\n  margin: 3rem 0;\n  max-width: 400px;\n`;\n","import React from 'react';\r\nimport { PageHeaderStyles } from '../styles/PageHeaderStyles';\r\nimport ParagraphText from './typography/ParagraphText';\r\nimport { SectionTitle } from './typography/Title';\r\n\r\nfunction PageHeader({ title, description, children, className }) {\r\n  return (\r\n    <div className={className}>\r\n      <PageHeaderStyles>\r\n        <SectionTitle>{title}</SectionTitle>\r\n        <ParagraphText>{description}</ParagraphText>\r\n        {children}\r\n      </PageHeaderStyles>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import styled from 'styled-components';\n\nexport const PageSpaceStyles = styled.div`\n  padding-top: ${(props) => props.top || 100}px;\n  padding-bottom: ${(props) => props.bottom || 100}px;\n`;\n","import React from 'react';\r\nimport { PageSpaceStyles } from '../styles/PageSpaceStyles';\r\n\r\nfunction PageSpace({ children, top, bottom }) {\r\n  return (\r\n    <PageSpaceStyles top={top} bottom={bottom}>\r\n      {children}\r\n    </PageSpaceStyles>\r\n  );\r\n}\r\n\r\nexport default PageSpace;\r\n","import styled from 'styled-components';\n\nexport const BlogGridStyles = styled.div`\n  margin-top: 3.5rem;\n  display: grid;\n  gap: 5rem;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 3rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const BlogItemStyles = styled.div`\n  display: inline-block;\n  border-radius: 12px;\n  .img {\n    height: 250px;\n    margin-bottom: 1.5rem;\n    border-radius: 12px;\n    transition: 0.3s ease-in-out transform;\n  }\n  .title {\n    margin-bottom: 0.5rem;\n  }\n  .publishedAt {\n    margin-bottom: 0.3rem;\n  }\n  &:hover {\n    .img {\n      transform: scale(1.05);\n    }\n  }\n  .categoriesText {\n    a {\n      color: var(--gray);\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    .title {\n      margin-bottom: 0.5rem;\n    }\n  }\n`;\n","import { Link } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\nimport { format } from 'date-fns';\r\nimport React from 'react';\r\nimport { BlogItemStyles } from '../../styles/blog/BlogItemStyles';\r\nimport ParagraphText from '../typography/ParagraphText';\r\nimport { Title } from '../typography/Title';\r\n\r\nfunction BlogItem({ path, title, image, categories, publishedAt }) {\r\n  return (\r\n    <BlogItemStyles>\r\n      <Link to={`/blogs/${path}`}>\r\n        <GatsbyImage\r\n          image={image.imageData}\r\n          alt={image.altText}\r\n          className=\"img\"\r\n        />\r\n      </Link>\r\n      <Link to={`/blogs/${path}`}>\r\n        <Title className=\"title\">{title}</Title>\r\n      </Link>\r\n      {publishedAt && (\r\n        <ParagraphText className=\"publishedAt\">\r\n          {format(new Date(publishedAt), 'p, MMMM dd, yyyy')}\r\n        </ParagraphText>\r\n      )}\r\n      <ParagraphText className=\"categoriesText\">\r\n        {categories.map((item, index) => (\r\n          <span key={item.slug.current}>\r\n            <Link to={`/categories/${item.slug.current}`}>{item.title}</Link>\r\n            {index < categories.length - 1 ? ', ' : ''}\r\n          </span>\r\n        ))}\r\n      </ParagraphText>\r\n    </BlogItemStyles>\r\n  );\r\n}\r\nexport default BlogItem;\r\n","import React from 'react';\r\nimport { BlogGridStyles } from '../../styles/blog/BlogGridStyles';\r\nimport BlogItem from './BlogItem';\r\n\r\nfunction BlogGrid({ blogs }) {\r\n  return (\r\n    <BlogGridStyles>\r\n      {blogs &&\r\n        blogs.map((blog) => (\r\n          <BlogItem\r\n            key={blog.id}\r\n            path={blog.slug.current}\r\n            title={blog.title}\r\n            categories={blog.categories}\r\n            image={{\r\n              imageData: blog.coverImage.asset.gatsbyImageData,\r\n              altText: blog.coverImage.alt,\r\n            }}\r\n            publishedAt={blog.publishedAt}\r\n          />\r\n        ))}\r\n    </BlogGridStyles>\r\n  );\r\n}\r\n\r\nexport default BlogGrid;\r\n","import styled from 'styled-components';\n\nexport const SingleCategoryStyles = styled.div`\n  .pageHeader {\n    position: relative;\n    padding: 2rem 0;\n    z-index: 1;\n    &:after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: linear-gradient(90deg, #0d121f, #0d121fe0 30%, #4a46eb14);\n      z-index: -1;\n    }\n    .coverImage {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: -1;\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    .pageHeader {\n      padding: 0;\n      &:after {\n        display: none;\n      }\n    }\n    .coverImage {\n      display: none;\n    }\n  }\n`;\n","import { graphql } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\nimport React from 'react';\r\nimport BlogGrid from '../components/blog/BlogGrid';\r\nimport MyPortableText from '../components/MyPortableText';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSpace from '../components/PageSpace';\r\nimport SEO from '../components/seo';\r\nimport { SingleCategoryStyles } from '../styles/category/SingleCategoryStyles';\r\n\r\nexport const query = graphql`\r\n  query SingleCategory($id: String!) {\r\n    sanityCategory(id: { eq: $id }) {\r\n      title\r\n      _rawDescription\r\n      coverImage {\r\n        asset {\r\n          gatsbyImageData\r\n        }\r\n        alt\r\n      }\r\n    }\r\n    allSanityBlog(filter: { categories: { elemMatch: { id: { eq: $id } } } }) {\r\n      nodes {\r\n        id\r\n        title\r\n        slug {\r\n          current\r\n        }\r\n        categories {\r\n          title\r\n          slug {\r\n            current\r\n          }\r\n        }\r\n        coverImage {\r\n          alt\r\n          asset {\r\n            gatsbyImageData\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SingleCategory({ data }) {\r\n  const category = data.sanityCategory;\r\n  const blogs = data.allSanityBlog.nodes;\r\n\r\n  return (\r\n    <PageSpace top={80} bottom={100}>\r\n      <SingleCategoryStyles>\r\n        <div className=\"container\">\r\n          <SEO title={category.title} />\r\n          <PageHeader title={category.title} className=\"pageHeader\">\r\n            <MyPortableText value={category._rawDescription} />\r\n            <GatsbyImage\r\n              image={category.coverImage.asset.gatsbyImageData}\r\n              alt={category.coverImage.alt}\r\n              className=\"coverImage\"\r\n            />\r\n          </PageHeader>\r\n          <BlogGrid blogs={blogs} />\r\n        </div>\r\n      </SingleCategoryStyles>\r\n    </PageSpace>\r\n  );\r\n}\r\n\r\nexport default SingleCategory;\r\n"],"names":["PageHeaderStyles","styled","title","description","children","className","ParagraphText","PageSpaceStyles","props","top","bottom","BlogGridStyles","BlogItemStyles","path","image","categories","publishedAt","to","G","imageData","alt","altText","Title","format","Date","map","item","index","key","slug","current","length","blogs","blog","id","coverImage","asset","gatsbyImageData","SingleCategoryStyles","data","category","sanityCategory","allSanityBlog","nodes","PageSpace","PageHeader","MyPortableText","value","_rawDescription","BlogGrid"],"sourceRoot":""}