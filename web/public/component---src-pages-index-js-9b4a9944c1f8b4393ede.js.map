{"version":3,"file":"component---src-pages-index-js-9b4a9944c1f8b4393ede.js","mappings":"8JAEO,MAAMA,EAAiBC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAVJ,CAAU,qN,iCCAjC,MAAMK,EAAiBL,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAVJ,CAAU,oY,wBCmCxC,MA7BA,SAAiBM,GAAmD,IAAlD,KAAEC,EAAI,MAAEC,EAAK,MAAEC,EAAK,WAAEC,EAAU,YAAEC,GAAaL,EAC/D,OACEM,EAAAA,cAACP,EAAc,KACbO,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAE,UAAYP,GAClBK,EAAAA,cAACG,EAAAA,EAAW,CACVN,MAAOA,EAAMO,UACbC,IAAKR,EAAMS,QACXC,UAAU,SAGdP,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAE,UAAYP,GAClBK,EAAAA,cAACQ,EAAAA,EAAK,CAACD,UAAU,SAASX,IAE3BG,GACCC,EAAAA,cAACS,EAAAA,EAAa,CAACF,UAAU,gBACtBG,EAAAA,EAAAA,GAAO,IAAIC,KAAKZ,GAAc,qBAGnCC,EAAAA,cAACS,EAAAA,EAAa,CAACF,UAAU,kBACtBT,EAAWc,KAAI,CAACC,EAAMC,IACrBd,EAAAA,cAAA,QAAMe,IAAKF,EAAKG,KAAKC,SACnBjB,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAE,eAAiBW,EAAKG,KAAKC,SAAYJ,EAAKjB,OACnDkB,EAAQhB,EAAWoB,OAAS,EAAI,KAAO,OAMpD,ECXA,MArBA,SAAiBxB,GAAa,IAAZ,MAAEyB,GAAOzB,EACzB,OACEM,EAAAA,cAACb,EAAc,KACZgC,GACCA,EAAMP,KAAKQ,GACTpB,EAAAA,cAACqB,EAAQ,CACPN,IAAKK,EAAKE,GACV3B,KAAMyB,EAAKJ,KAAKC,QAChBrB,MAAOwB,EAAKxB,MACZE,WAAYsB,EAAKtB,WACjBD,MAAO,CACLO,UAAWgB,EAAKG,WAAWC,MAAMC,gBACjCnB,QAASc,EAAKG,WAAWlB,KAE3BN,YAAaqB,EAAKrB,gBAK9B,C,yFCnBO,MAAM2B,GAAetC,E,KAAAA,SAAOa,EAAAA,IAAKX,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAZJ,CAAY,6OAQxBM,IAAA,IAAC,QAAEiC,GAASjC,EAAA,OACxBiC,IAAYC,EAAAA,EAAWC,QACnB,4DACAF,IAAYC,EAAAA,EAAWE,UACvB,iBACA,aAAa,IACTC,IAAA,IAAC,QAAEJ,GAASI,EAAA,OACpBJ,IAAYC,EAAAA,EAAWI,QAAU,2BAA6B,MAAM,IAC7DC,IAAA,IAAC,QAAEN,GAASM,EAAA,OACnBN,IAAYC,EAAAA,EAAWE,UAAY,iBAAmB,cAAc,ICTxE,MARA,SAAepC,GAA6D,IAA5D,SAAEwC,EAAQ,IAAEC,EAAG,QAAER,EAAUC,EAAAA,EAAWC,WAAYO,GAAO1C,EACvE,OACEM,EAAAA,cAAC0B,EAAYW,OAAAC,OAAA,CAACC,GAAIJ,GAASC,EAAK,CAAET,QAASA,IACxCO,EAGP,C,4ECRO,MAAMM,EAAqBpD,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAAVJ,CAAU,gOCA/BqD,EAAqBrD,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAVJ,CAAU,qH,4CCmB5C,MAdA,SAAqBM,GAAgC,IAA/B,MAAEE,EAAK,YAAE8C,EAAW,KAAE1B,GAAMtB,EAChD,OACEM,EAAAA,cAACyC,EAAkB,KACjBzC,EAAAA,cAACQ,EAAAA,EAAK,CAACD,UAAU,SAASX,GAC1BI,EAAAA,cAAA,OAAKO,UAAU,QACbP,EAAAA,cAAC2C,EAAAA,EAAc,CAACC,MAAOF,KAEzB1C,EAAAA,cAAC6C,EAAAA,EAAM,CAAC3C,GAAE,eAAiBc,EAAKC,QAAWU,QAASC,EAAAA,EAAWI,SAAS,oBAK9E,ECAA,MAfA,SAAqBtC,GAAgB,IAAf,SAAEoD,GAAUpD,EAChC,OACEM,EAAAA,cAACwC,EAAkB,KAChBM,EAASlC,KAAKC,GACbb,EAAAA,cAAC+C,EAAY,CACXhC,IAAKF,EAAKS,GACV1B,MAAOiB,EAAKjB,MACZ8C,YAAa7B,EAAKmC,gBAClBhC,KAAMH,EAAKG,SAKrB,C,uDCjBO,MAAMY,EAAa,CACxBC,QAAS,UACTC,UAAW,YACXE,QAAS,U,2GCDJ,MAAMiB,EAAoB7D,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAVJ,CAAU,ihC,wBCkC3C,MA7BA,WACE,OACEY,EAAAA,cAACiD,EAAiB,KAChBjD,EAAAA,cAAA,OAAKO,UAAU,aACbP,EAAAA,cAAA,OAAKO,UAAU,iBACbP,EAAAA,cAAA,OAAKO,UAAU,QACbP,EAAAA,cAAA,MAAIO,UAAU,iBAAgB,uBAC9BP,EAAAA,cAACS,EAAAA,EAAa,CAACF,UAAU,cAAa,sBAGtCP,EAAAA,cAAC6C,EAAAA,EAAM,CAAC3C,GAAG,SAASiC,IAAKlC,EAAAA,GAAMM,UAAU,gBAAe,cAI1DP,EAAAA,cAAA,OAAKO,UAAU,SACbP,EAAAA,cAACkD,EAAAA,EAAW,CACV3C,UAAU,cACV4C,IAAI,0BACJ9C,IAAI,SACJ+C,YAAY,UACZC,eAAe,UAASC,YAAAC,EAAA,WAOtC,E,SChCO,MAAMC,EAAsBpE,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAVJ,CAAU,2D,wBC8C7C,MAzCA,WACE,MA2BMqE,GA3BOC,EAAAA,EAAAA,IAAe,cA2BDC,kBAAkBC,MAAM,GAAGzC,MACtD,OACEnB,EAAAA,cAACwD,EAAmB,KAClBxD,EAAAA,cAAC6D,EAAAA,EAAY,KAAC,iBACd7D,EAAAA,cAACS,EAAAA,EAAa,CAACF,UAAU,uBAAsB,kFAI/CP,EAAAA,cAAC8D,EAAAA,EAAQ,CAAC3C,MAAOsC,IAGvB,EC5CO,MAAMM,EAAsB3E,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAVJ,CAAU,4C,cCiC7C,MA5BA,WACE,MAiBM0D,GAjBQY,EAAAA,EAAAA,IAAe,cAiBNC,kBAAkBC,MAAM,GAAG9D,WAClD,OACEE,EAAAA,cAAC+D,EAAmB,KAClB/D,EAAAA,cAAC6D,EAAAA,EAAY,KAAC,kBACd7D,EAAAA,cAACS,EAAAA,EAAa,CAACF,UAAU,QAAO,4BAChCP,EAAAA,cAACgE,EAAAA,EAAY,CAAClB,SAAUA,IAG9B,ECjBA,MAVkBmB,IAChBjE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACkE,EAAAA,EAAG,MACJlE,EAAAA,cAACmE,EAAW,MACZnE,EAAAA,cAAA,OAAKO,UAAU,aACbP,EAAAA,cAACoE,EAAa,MACdpE,EAAAA,cAACqE,EAAa,O","sources":["webpack://spacehub/./src/styles/blog/BlogGridStyles.js","webpack://spacehub/./src/styles/blog/BlogItemStyles.js","webpack://spacehub/./src/components/blog/BlogItem.js","webpack://spacehub/./src/components/blog/BlogGrid.js","webpack://spacehub/./src/styles/buttons/ButtonStyles.js","webpack://spacehub/./src/components/buttons/Button.js","webpack://spacehub/./src/styles/category/CategoryGridStyles.js","webpack://spacehub/./src/styles/category/CategoryItemStyles.js","webpack://spacehub/./src/components/category/CategoryItem.js","webpack://spacehub/./src/components/category/CategoryGrid.js","webpack://spacehub/./src/constants/buttonTypes.js","webpack://spacehub/./src/styles/homePage/HeroSectionStyles.js","webpack://spacehub/./src/components/homepage/HeroSection.js","webpack://spacehub/./src/styles/homePage/FeaturedBlogsStyles.js","webpack://spacehub/./src/components/homepage/FeaturedBlogs.js","webpack://spacehub/./src/styles/homePage/TopCategoriesStyles.js","webpack://spacehub/./src/components/homepage/TopCategories.js","webpack://spacehub/./src/pages/index.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BlogGridStyles = styled.div`\n  margin-top: 3.5rem;\n  display: grid;\n  gap: 5rem;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 3rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const BlogItemStyles = styled.div`\n  display: inline-block;\n  border-radius: 12px;\n  .img {\n    height: 250px;\n    margin-bottom: 1.5rem;\n    border-radius: 12px;\n    transition: 0.3s ease-in-out transform;\n  }\n  .title {\n    margin-bottom: 0.5rem;\n  }\n  .publishedAt {\n    margin-bottom: 0.3rem;\n  }\n  &:hover {\n    .img {\n      transform: scale(1.05);\n    }\n  }\n  .categoriesText {\n    a {\n      color: var(--gray);\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    .title {\n      margin-bottom: 0.5rem;\n    }\n  }\n`;\n","import { Link } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\nimport { format } from 'date-fns';\r\nimport React from 'react';\r\nimport { BlogItemStyles } from '../../styles/blog/BlogItemStyles';\r\nimport ParagraphText from '../typography/ParagraphText';\r\nimport { Title } from '../typography/Title';\r\n\r\nfunction BlogItem({ path, title, image, categories, publishedAt }) {\r\n  return (\r\n    <BlogItemStyles>\r\n      <Link to={`/blogs/${path}`}>\r\n        <GatsbyImage\r\n          image={image.imageData}\r\n          alt={image.altText}\r\n          className=\"img\"\r\n        />\r\n      </Link>\r\n      <Link to={`/blogs/${path}`}>\r\n        <Title className=\"title\">{title}</Title>\r\n      </Link>\r\n      {publishedAt && (\r\n        <ParagraphText className=\"publishedAt\">\r\n          {format(new Date(publishedAt), 'p, MMMM dd, yyyy')}\r\n        </ParagraphText>\r\n      )}\r\n      <ParagraphText className=\"categoriesText\">\r\n        {categories.map((item, index) => (\r\n          <span key={item.slug.current}>\r\n            <Link to={`/categories/${item.slug.current}`}>{item.title}</Link>\r\n            {index < categories.length - 1 ? ', ' : ''}\r\n          </span>\r\n        ))}\r\n      </ParagraphText>\r\n    </BlogItemStyles>\r\n  );\r\n}\r\nexport default BlogItem;\r\n","import React from 'react';\r\nimport { BlogGridStyles } from '../../styles/blog/BlogGridStyles';\r\nimport BlogItem from './BlogItem';\r\n\r\nfunction BlogGrid({ blogs }) {\r\n  return (\r\n    <BlogGridStyles>\r\n      {blogs &&\r\n        blogs.map((blog) => (\r\n          <BlogItem\r\n            key={blog.id}\r\n            path={blog.slug.current}\r\n            title={blog.title}\r\n            categories={blog.categories}\r\n            image={{\r\n              imageData: blog.coverImage.asset.gatsbyImageData,\r\n              altText: blog.coverImage.alt,\r\n            }}\r\n            publishedAt={blog.publishedAt}\r\n          />\r\n        ))}\r\n    </BlogGridStyles>\r\n  );\r\n}\r\n\r\nexport default BlogGrid;\r\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { buttonType } from '../../constants/buttonTypes';\n\nexport const ButtonStyles = styled(Link)`\n  display: inline-block;\n  cursor: pointer;\n  outline: none;\n  border: none;\n  padding: 1rem 2rem;\n  border-radius: 4px;\n  font-size: 1.6rem;\n  background: ${({ variant }) =>\n    variant === buttonType.primary\n      ? 'linear-gradient(135deg, var(--secondary), var(--primary))'\n      : variant === buttonType.secondary\n      ? 'var(--white-1)'\n      : 'transparent'};\n  border: ${({ variant }) =>\n    variant === buttonType.outline ? '2px solid var(--primary)' : 'none'};\n  color: ${({ variant }) =>\n    variant === buttonType.secondary ? 'var(--black-1)' : 'var(--white)'};\n  @media only screen and (max-width: 768px) {\n    padding: 0.8rem 1.2rem;\n    font-size: 1.4rem;\n  }\n`;\n","import React from 'react';\r\nimport { buttonType } from '../../constants/buttonTypes';\r\nimport { ButtonStyles } from '../../styles/buttons/ButtonStyles';\r\n\r\nfunction Button({ children, tag, variant = buttonType.primary, ...props }) {\r\n  return (\r\n    <ButtonStyles as={tag} {...props} variant={variant}>\r\n      {children}\r\n    </ButtonStyles>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\n\nexport const CategoryGridStyles = styled.div`\n  display: grid;\n  margin-top: 3.5rem;\n  display: grid;\n  gap: 5rem;\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 2rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CategoryItemStyles = styled.div`\n  background: var(--black-1);\n  padding: 2rem;\n  border-radius: 12px;\n  .title {\n    margin-bottom: 1rem;\n  }\n  .text {\n    margin-bottom: 2rem;\n  }\n`;\n","import React from 'react';\r\nimport { CategoryItemStyles } from '../../styles/category/CategoryItemStyles';\r\nimport Button from '../buttons/Button';\r\nimport { Title } from '../typography/Title';\r\nimport MyPortableText from '../MyPortableText';\r\nimport { buttonType } from '../../constants/buttonTypes';\r\n\r\nfunction CategoryItem({ title, description, slug }) {\r\n  return (\r\n    <CategoryItemStyles>\r\n      <Title className=\"title\">{title}</Title>\r\n      <div className=\"text\">\r\n        <MyPortableText value={description} />\r\n      </div>\r\n      <Button to={`/categories/${slug.current}`} variant={buttonType.outline}>\r\n        Explore Category\r\n      </Button>\r\n    </CategoryItemStyles>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React from 'react';\r\nimport { CategoryGridStyles } from '../../styles/category/CategoryGridStyles';\r\nimport CategoryItem from './CategoryItem';\r\n\r\nfunction CategoryGrid({ category }) {\r\n  return (\r\n    <CategoryGridStyles>\r\n      {category.map((item) => (\r\n        <CategoryItem\r\n          key={item.id}\r\n          title={item.title}\r\n          description={item._rawDescription}\r\n          slug={item.slug}\r\n        />\r\n      ))}\r\n    </CategoryGridStyles>\r\n  );\r\n}\r\n\r\nexport default CategoryGrid;\r\n","export const buttonType = {\r\n  primary: 'primary',\r\n  secondary: 'secondary',\r\n  outline: 'outline',\r\n};\r\n","import styled from 'styled-components';\n\nexport const HeroSectionStyles = styled.div`\n  min-height: 80vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  .container {\n    height: 100%;\n  }\n  .hero__wrapper {\n    width: 100%;\n    height: 100%;\n    &::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 50%;\n      height: 100%;\n      background: linear-gradient(135deg, #030213, #08011c);\n      z-index: -1;\n    }\n    .left {\n      width: 50%;\n      padding: 50px 0;\n      .hero__heading {\n        max-width: 450px;\n        font-size: 4rem;\n        font-family: 'Poppins', sans-serif;\n        font-weight: '700';\n        margin: 0.2rem 0;\n      }\n      .hero__text {\n        max-width: 350px;\n      }\n      .hero__button {\n        margin-top: 1.5rem;\n      }\n    }\n    .right {\n      position: absolute;\n      right: 0;\n      top: 0;\n      width: 50%;\n      height: 100%;\n      .hero__image {\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    .hero__wrapper {\n      height: 100%;\n      display: flex;\n      align-items: flex-start;\n      justify-content: center;\n      flex-direction: column-reverse;\n      padding-top: 80px;\n      padding-bottom: 80px;\n      &::after {\n        width: 100%;\n      }\n      .right {\n        position: initial;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        .hero__image {\n          height: 300px;\n          margin: 0 auto;\n        }\n      }\n      .left {\n        width: 100%;\n        margin-top: 1rem;\n        padding: 0;\n        .hero__heading {\n          max-width: 330px;\n          font-size: 3rem;\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { StaticImage } from 'gatsby-plugin-image';\r\nimport { HeroSectionStyles } from '../../styles/homePage/HeroSectionStyles';\r\nimport ParagraphText from '../typography/ParagraphText';\r\nimport Button from '../buttons/Button';\r\n\r\nfunction HeroSection() {\r\n  return (\r\n    <HeroSectionStyles>\r\n      <div className=\"container\">\r\n        <div className=\"hero__wrapper\">\r\n          <div className=\"left\">\r\n            <h1 className=\"hero__heading\">Explore Space World</h1>\r\n            <ParagraphText className=\"hero__text\">\r\n              Get Some Coffee !!\r\n            </ParagraphText>\r\n            <Button to=\"/blogs\" tag={Link} className=\"hero__button\">\r\n              All Blogs\r\n            </Button>\r\n          </div>\r\n          <div className=\"right\">\r\n            <StaticImage\r\n              className=\"hero__image\"\r\n              src=\"../../images/vr-guy.jpg\"\r\n              alt=\"vr guy\"\r\n              placeholder=\"blurred\"\r\n              objectPosition=\"50% 30%\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </HeroSectionStyles>\r\n  );\r\n}\r\n\r\nexport default HeroSection;\r\n","import styled from 'styled-components';\n\nexport const FeaturedBlogsStyles = styled.div`\n  padding: 5rem 0;\n  .featuredBlogs__text {\n    max-width: 450px;\n  }\n`;\n","import { graphql, useStaticQuery } from 'gatsby';\r\nimport React from 'react';\r\nimport { FeaturedBlogsStyles } from '../../styles/homePage/FeaturedBlogsStyles';\r\nimport ParagraphText from '../typography/ParagraphText';\r\nimport { SectionTitle } from '../typography/Title';\r\nimport BlogGrid from '../blog/BlogGrid';\r\n\r\nfunction FeaturedBlogs() {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allSanityFeatured(filter: { _id: { eq: \"featuredItems\" } }) {\r\n        nodes {\r\n          blogs {\r\n            id\r\n            title\r\n            categories {\r\n              title\r\n              slug {\r\n                current\r\n              }\r\n            }\r\n            coverImage {\r\n              alt\r\n              asset {\r\n                gatsbyImageData\r\n              }\r\n            }\r\n            slug {\r\n              current\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  const featuredBlogs = data.allSanityFeatured.nodes[0].blogs;\r\n  return (\r\n    <FeaturedBlogsStyles>\r\n      <SectionTitle>FeaturedBlogs</SectionTitle>\r\n      <ParagraphText className=\"featuredBlogs__text\">\r\n        as opposed to using 'Content here, content here', making it look like\r\n        readable\r\n      </ParagraphText>\r\n      <BlogGrid blogs={featuredBlogs} />\r\n    </FeaturedBlogsStyles>\r\n  );\r\n}\r\n\r\nexport default FeaturedBlogs;\r\n","import styled from 'styled-components';\n\nexport const TopCategoriesStyles = styled.div`\n  padding: 5rem 0;\n  .info {\n    max-width: 400px;\n  }\n`;\n","import { graphql, useStaticQuery } from 'gatsby';\r\nimport React from 'react';\r\nimport { TopCategoriesStyles } from '../../styles/homePage/TopCategoriesStyles';\r\nimport ParagraphText from '../typography/ParagraphText';\r\nimport { SectionTitle } from '../typography/Title';\r\nimport CategoryGrid from '../category/CategoryGrid';\r\n\r\nfunction TopCategories() {\r\n  const data2 = useStaticQuery(graphql`\r\n    {\r\n      allSanityFeatured(filter: { _id: { eq: \"featuredItems\" } }) {\r\n        nodes {\r\n          categories {\r\n            id\r\n            title\r\n            slug {\r\n              current\r\n            }\r\n            _rawDescription\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const category = data2.allSanityFeatured.nodes[0].categories;\r\n  return (\r\n    <TopCategoriesStyles>\r\n      <SectionTitle>Top Categories</SectionTitle>\r\n      <ParagraphText className=\"info\">All about Top categories</ParagraphText>\r\n      <CategoryGrid category={category} />\r\n    </TopCategoriesStyles>\r\n  );\r\n}\r\n\r\nexport default TopCategories;\r\n","import React from 'react';\r\nimport HeroSection from '../components/homepage/HeroSection';\r\nimport SEO from '../components/seo';\r\nimport FeaturedBlogs from '../components/homepage/FeaturedBlogs';\r\nimport TopCategories from '../components/homepage/TopCategories';\r\n\r\nconst IndexPage = () => (\r\n  <>\r\n    <SEO />\r\n    <HeroSection />\r\n    <div className=\"container\">\r\n      <FeaturedBlogs />\r\n      <TopCategories />\r\n    </div>\r\n  </>\r\n);\r\nexport default IndexPage;\r\n"],"names":["BlogGridStyles","styled","div","withConfig","displayName","componentId","BlogItemStyles","_ref","path","title","image","categories","publishedAt","React","Link","to","GatsbyImage","imageData","alt","altText","className","Title","ParagraphText","format","Date","map","item","index","key","slug","current","length","blogs","blog","BlogItem","id","coverImage","asset","gatsbyImageData","ButtonStyles","variant","buttonType","primary","secondary","_ref2","outline","_ref3","children","tag","props","Object","assign","as","CategoryGridStyles","CategoryItemStyles","description","MyPortableText","value","Button","category","CategoryItem","_rawDescription","HeroSectionStyles","StaticImage","src","placeholder","objectPosition","__imageData","require","FeaturedBlogsStyles","featuredBlogs","useStaticQuery","allSanityFeatured","nodes","SectionTitle","BlogGrid","TopCategoriesStyles","CategoryGrid","IndexPage","SEO","HeroSection","FeaturedBlogs","TopCategories"],"sourceRoot":""}