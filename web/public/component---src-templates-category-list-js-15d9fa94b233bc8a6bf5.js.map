{"version":3,"file":"component---src-templates-category-list-js-15d9fa94b233bc8a6bf5.js","mappings":"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","sources":["webpack://spacehub/./src/styles/PageHeaderStyles.js","webpack://spacehub/./src/components/PageHeader.js","webpack://spacehub/./src/styles/PageSpaceStyles.js","webpack://spacehub/./src/components/PageSpace.js","webpack://spacehub/./src/styles/PaginationStyles.js","webpack://spacehub/./src/components/Pagination.js","webpack://spacehub/./src/styles/buttons/ButtonStyles.js","webpack://spacehub/./src/components/buttons/Button.js","webpack://spacehub/./src/styles/category/CategoryGridStyles.js","webpack://spacehub/./src/styles/category/CategoryItemStyles.js","webpack://spacehub/./src/components/category/CategoryItem.js","webpack://spacehub/./src/components/category/CategoryGrid.js","webpack://spacehub/./src/constants/buttonTypes.js","webpack://spacehub/./src/templates/CategoryList.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageHeaderStyles = styled.div`\n  margin: 3rem 0;\n  max-width: 400px;\n`;\n","import React from 'react';\r\nimport { PageHeaderStyles } from '../styles/PageHeaderStyles';\r\nimport ParagraphText from './typography/ParagraphText';\r\nimport { SectionTitle } from './typography/Title';\r\n\r\nfunction PageHeader({ title, description, children, className }) {\r\n  return (\r\n    <div className={className}>\r\n      <PageHeaderStyles>\r\n        <SectionTitle>{title}</SectionTitle>\r\n        <ParagraphText>{description}</ParagraphText>\r\n        {children}\r\n      </PageHeaderStyles>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import styled from 'styled-components';\n\nexport const PageSpaceStyles = styled.div`\n  padding-top: ${(props) => props.top || 100}px;\n  padding-bottom: ${(props) => props.bottom || 100}px;\n`;\n","import React from 'react';\r\nimport { PageSpaceStyles } from '../styles/PageSpaceStyles';\r\n\r\nfunction PageSpace({ children, top, bottom }) {\r\n  return (\r\n    <PageSpaceStyles top={top} bottom={bottom}>\r\n      {children}\r\n    </PageSpaceStyles>\r\n  );\r\n}\r\n\r\nexport default PageSpace;\r\n","import styled from 'styled-components';\n\nexport const PaginationStyles = styled.div`\n  text-align: center;\n  margin-top: 5rem;\n  .icons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n    margin-bottom: 1rem;\n    a {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 1.6rem;\n      background: var(--gray);\n      padding: 0.8rem;\n      border-radius: 4px;\n      svg {\n        padding: 0;\n        margin: 0;\n      }\n      &.disabled {\n        opacity: 0.2;\n        pointer-events: none;\n      }\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport clsx from 'clsx';\r\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\r\nimport { PaginationStyles } from '../styles/PaginationStyles';\r\nimport ParagraphText from './typography/ParagraphText';\r\n\r\nfunction Pagination({ baseURL, numberOfPages, currentPage }) {\r\n  const prevPage = currentPage - 1 <= 1 ? '' : (currentPage - 1).toString();\r\n  const nextPage = (currentPage + 1).toString();\r\n  return (\r\n    <div className=\"container\">\r\n      <PaginationStyles>\r\n        <div className=\"icons\">\r\n          <Link\r\n            to={`${baseURL}/${prevPage}`}\r\n            className={clsx(currentPage <= 1 && 'disabled')}\r\n          >\r\n            <FiChevronLeft /> Prev\r\n          </Link>\r\n          <Link\r\n            to={`${baseURL}/${nextPage}`}\r\n            className={clsx(currentPage >= numberOfPages && 'disabled')}\r\n          >\r\n            Next <FiChevronRight />\r\n          </Link>\r\n        </div>\r\n        <ParagraphText>\r\n          page {currentPage} of {numberOfPages} pages\r\n        </ParagraphText>\r\n      </PaginationStyles>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { buttonType } from '../../constants/buttonTypes';\n\nexport const ButtonStyles = styled(Link)`\n  display: inline-block;\n  cursor: pointer;\n  outline: none;\n  border: none;\n  padding: 1rem 2rem;\n  border-radius: 4px;\n  font-size: 1.6rem;\n  background: ${({ variant }) =>\n    variant === buttonType.primary\n      ? 'linear-gradient(135deg, var(--secondary), var(--primary))'\n      : variant === buttonType.secondary\n      ? 'var(--white-1)'\n      : 'transparent'};\n  border: ${({ variant }) =>\n    variant === buttonType.outline ? '2px solid var(--primary)' : 'none'};\n  color: ${({ variant }) =>\n    variant === buttonType.secondary ? 'var(--black-1)' : 'var(--white)'};\n  @media only screen and (max-width: 768px) {\n    padding: 0.8rem 1.2rem;\n    font-size: 1.4rem;\n  }\n`;\n","import React from 'react';\r\nimport { buttonType } from '../../constants/buttonTypes';\r\nimport { ButtonStyles } from '../../styles/buttons/ButtonStyles';\r\n\r\nfunction Button({ children, tag, variant = buttonType.primary, ...props }) {\r\n  return (\r\n    <ButtonStyles as={tag} {...props} variant={variant}>\r\n      {children}\r\n    </ButtonStyles>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\n\nexport const CategoryGridStyles = styled.div`\n  display: grid;\n  margin-top: 3.5rem;\n  display: grid;\n  gap: 5rem;\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 2rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CategoryItemStyles = styled.div`\n  background: var(--black-1);\n  padding: 2rem;\n  border-radius: 12px;\n  .title {\n    margin-bottom: 1rem;\n  }\n  .text {\n    margin-bottom: 2rem;\n  }\n`;\n","import React from 'react';\r\nimport { CategoryItemStyles } from '../../styles/category/CategoryItemStyles';\r\nimport Button from '../buttons/Button';\r\nimport { Title } from '../typography/Title';\r\nimport MyPortableText from '../MyPortableText';\r\nimport { buttonType } from '../../constants/buttonTypes';\r\n\r\nfunction CategoryItem({ title, description, slug }) {\r\n  return (\r\n    <CategoryItemStyles>\r\n      <Title className=\"title\">{title}</Title>\r\n      <div className=\"text\">\r\n        <MyPortableText value={description} />\r\n      </div>\r\n      <Button to={`/categories/${slug.current}`} variant={buttonType.outline}>\r\n        Explore Category\r\n      </Button>\r\n    </CategoryItemStyles>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React from 'react';\r\nimport { CategoryGridStyles } from '../../styles/category/CategoryGridStyles';\r\nimport CategoryItem from './CategoryItem';\r\n\r\nfunction CategoryGrid({ category }) {\r\n  return (\r\n    <CategoryGridStyles>\r\n      {category.map((item) => (\r\n        <CategoryItem\r\n          key={item.id}\r\n          title={item.title}\r\n          description={item._rawDescription}\r\n          slug={item.slug}\r\n        />\r\n      ))}\r\n    </CategoryGridStyles>\r\n  );\r\n}\r\n\r\nexport default CategoryGrid;\r\n","export const buttonType = {\r\n  primary: 'primary',\r\n  secondary: 'secondary',\r\n  outline: 'outline',\r\n};\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PageSpace from '../components/PageSpace';\r\nimport SEO from '../components/seo';\r\nimport PageHeader from '../components/PageHeader';\r\nimport CategoryGrid from '../components/category/CategoryGrid';\r\nimport Pagination from '../components/Pagination';\r\n\r\nexport const CategoryListQuery = graphql`\r\n  query categoriesQuery($limit: Int!, $offset: Int!) {\r\n    allSanityCategory(\r\n      sort: { fields: _createdAt, order: DESC }\r\n      limit: $limit\r\n      skip: $offset\r\n    ) {\r\n      nodes {\r\n        id\r\n        title\r\n        slug {\r\n          current\r\n        }\r\n        _rawDescription\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Categories({ data, pageContext }) {\r\n  const { currentPage, numberOfPages } = pageContext;\r\n  const categories = data.allSanityCategory.nodes;\r\n\r\n  return (\r\n    <>\r\n      <SEO title=\"Categories\" />\r\n      <PageSpace top={80} bottom={100}>\r\n        <div className=\"container\">\r\n          <PageHeader\r\n            title=\"All Categories\"\r\n            // description=\"\"\r\n          />\r\n          <CategoryGrid category={categories} />\r\n\r\n          {numberOfPages > 1 && (\r\n            <Pagination\r\n              currentPage={currentPage}\r\n              numberOfPages={numberOfPages}\r\n              baseURL=\"/categories\"\r\n            />\r\n          )}\r\n        </div>\r\n      </PageSpace>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Categories;\r\n"],"names":["PageHeaderStyles","styled","div","withConfig","displayName","componentId","_ref","title","description","children","className","React","SectionTitle","ParagraphText","PageSpaceStyles","props","top","bottom","PaginationStyles","baseURL","numberOfPages","currentPage","prevPage","toString","nextPage","Link","to","clsx","FiChevronLeft","FiChevronRight","ButtonStyles","variant","buttonType","primary","secondary","_ref2","outline","_ref3","tag","Object","assign","as","CategoryGridStyles","CategoryItemStyles","slug","Title","MyPortableText","value","Button","current","category","map","item","CategoryItem","key","id","_rawDescription","data","pageContext","categories","allSanityCategory","nodes","SEO","PageSpace","PageHeader","CategoryGrid","Pagination"],"sourceRoot":""}