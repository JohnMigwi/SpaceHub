{"version":3,"file":"component---src-templates-category-list-js-47a376a05e4254e820ca.js","mappings":"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","sources":["webpack://spacehub/./src/styles/PageHeaderStyles.js","webpack://spacehub/./src/components/PageHeader.js","webpack://spacehub/./src/styles/PageSpaceStyles.js","webpack://spacehub/./src/components/PageSpace.js","webpack://spacehub/./src/styles/PaginationStyles.js","webpack://spacehub/./src/components/Pagination.js","webpack://spacehub/./src/styles/buttons/ButtonStyles.js","webpack://spacehub/./src/components/buttons/Button.js","webpack://spacehub/./src/styles/category/CategoryGridStyles.js","webpack://spacehub/./src/styles/category/CategoryItemStyles.js","webpack://spacehub/./src/components/category/CategoryItem.js","webpack://spacehub/./src/components/category/CategoryGrid.js","webpack://spacehub/./src/constants/buttonTypes.js","webpack://spacehub/./src/templates/CategoryList.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageHeaderStyles = styled.div`\n  margin: 3rem 0;\n  max-width: 400px;\n`;\n","import React from 'react';\r\nimport { PageHeaderStyles } from '../styles/PageHeaderStyles';\r\nimport ParagraphText from './typography/ParagraphText';\r\nimport { SectionTitle } from './typography/Title';\r\n\r\nfunction PageHeader({ title, description, children, className }) {\r\n  return (\r\n    <div className={className}>\r\n      <PageHeaderStyles>\r\n        <SectionTitle>{title}</SectionTitle>\r\n        <ParagraphText>{description}</ParagraphText>\r\n        {children}\r\n      </PageHeaderStyles>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import styled from 'styled-components';\n\nexport const PageSpaceStyles = styled.div`\n  padding-top: ${(props) => props.top || 100}px;\n  padding-bottom: ${(props) => props.bottom || 100}px;\n`;\n","import React from 'react';\r\nimport { PageSpaceStyles } from '../styles/PageSpaceStyles';\r\n\r\nfunction PageSpace({ children, top, bottom }) {\r\n  return (\r\n    <PageSpaceStyles top={top} bottom={bottom}>\r\n      {children}\r\n    </PageSpaceStyles>\r\n  );\r\n}\r\n\r\nexport default PageSpace;\r\n","import styled from 'styled-components';\n\nexport const PaginationStyles = styled.div`\n  text-align: center;\n  margin-top: 5rem;\n  .icons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n    margin-bottom: 1rem;\n    a {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 1.6rem;\n      background: var(--gray);\n      padding: 0.8rem;\n      border-radius: 4px;\n      svg {\n        padding: 0;\n        margin: 0;\n      }\n      &.disabled {\n        opacity: 0.2;\n        pointer-events: none;\n      }\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport clsx from 'clsx';\r\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\r\nimport { PaginationStyles } from '../styles/PaginationStyles';\r\nimport ParagraphText from './typography/ParagraphText';\r\n\r\nfunction Pagination({ baseURL, numberOfPages, currentPage }) {\r\n  const prevPage = currentPage - 1 <= 1 ? '' : (currentPage - 1).toString();\r\n  const nextPage = (currentPage + 1).toString();\r\n  return (\r\n    <div className=\"container\">\r\n      <PaginationStyles>\r\n        <div className=\"icons\">\r\n          <Link\r\n            to={`${baseURL}/${prevPage}`}\r\n            className={clsx(currentPage <= 1 && 'disabled')}\r\n          >\r\n            <FiChevronLeft /> Prev\r\n          </Link>\r\n          <Link\r\n            to={`${baseURL}/${nextPage}`}\r\n            className={clsx(currentPage >= numberOfPages && 'disabled')}\r\n          >\r\n            Next <FiChevronRight />\r\n          </Link>\r\n        </div>\r\n        <ParagraphText>\r\n          page {currentPage} of {numberOfPages} pages\r\n        </ParagraphText>\r\n      </PaginationStyles>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { buttonType } from '../../constants/buttonTypes';\n\nexport const ButtonStyles = styled(Link)`\n  display: inline-block;\n  cursor: pointer;\n  outline: none;\n  border: none;\n  padding: 1rem 2rem;\n  border-radius: 4px;\n  font-size: 1.6rem;\n  background: ${({ variant }) =>\n    variant === buttonType.primary\n      ? 'linear-gradient(135deg, var(--secondary), var(--primary))'\n      : variant === buttonType.secondary\n      ? 'var(--white-1)'\n      : 'transparent'};\n  border: ${({ variant }) =>\n    variant === buttonType.outline ? '2px solid var(--primary)' : 'none'};\n  color: ${({ variant }) =>\n    variant === buttonType.secondary ? 'var(--black-1)' : 'var(--white)'};\n  @media only screen and (max-width: 768px) {\n    padding: 0.8rem 1.2rem;\n    font-size: 1.4rem;\n  }\n`;\n","import React from 'react';\r\nimport { buttonType } from '../../constants/buttonTypes';\r\nimport { ButtonStyles } from '../../styles/buttons/ButtonStyles';\r\n\r\nfunction Button({ children, tag, variant = buttonType.primary, ...props }) {\r\n  return (\r\n    <ButtonStyles as={tag} {...props} variant={variant}>\r\n      {children}\r\n    </ButtonStyles>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\n\nexport const CategoryGridStyles = styled.div`\n  display: grid;\n  margin-top: 3.5rem;\n  display: grid;\n  gap: 5rem;\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 2rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CategoryItemStyles = styled.div`\n  background: var(--black-1);\n  padding: 2rem;\n  border-radius: 12px;\n  .title {\n    margin-bottom: 1rem;\n  }\n  .text {\n    margin-bottom: 2rem;\n  }\n`;\n","import React from 'react';\r\nimport { CategoryItemStyles } from '../../styles/category/CategoryItemStyles';\r\nimport Button from '../buttons/Button';\r\nimport { Title } from '../typography/Title';\r\nimport MyPortableText from '../MyPortableText';\r\nimport { buttonType } from '../../constants/buttonTypes';\r\n\r\nfunction CategoryItem({ title, description, slug }) {\r\n  return (\r\n    <CategoryItemStyles>\r\n      <Title className=\"title\">{title}</Title>\r\n      <div className=\"text\">\r\n        <MyPortableText value={description} />\r\n      </div>\r\n      <Button to={`/categories/${slug.current}`} variant={buttonType.outline}>\r\n        Explore Category\r\n      </Button>\r\n    </CategoryItemStyles>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React from 'react';\r\nimport { CategoryGridStyles } from '../../styles/category/CategoryGridStyles';\r\nimport CategoryItem from './CategoryItem';\r\n\r\nfunction CategoryGrid({ category }) {\r\n  return (\r\n    <CategoryGridStyles>\r\n      {category.map((item) => (\r\n        <CategoryItem\r\n          key={item.id}\r\n          title={item.title}\r\n          description={item._rawDescription}\r\n          slug={item.slug}\r\n        />\r\n      ))}\r\n    </CategoryGridStyles>\r\n  );\r\n}\r\n\r\nexport default CategoryGrid;\r\n","export const buttonType = {\r\n  primary: 'primary',\r\n  secondary: 'secondary',\r\n  outline: 'outline',\r\n};\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PageSpace from '../components/PageSpace';\r\nimport SEO from '../components/seo';\r\nimport PageHeader from '../components/PageHeader';\r\nimport CategoryGrid from '../components/category/CategoryGrid';\r\nimport Pagination from '../components/Pagination';\r\n\r\nexport const CategoryListQuery = graphql`\r\n  query categoriesQuery($limit: Int!, $offset: Int!) {\r\n    allSanityCategory(\r\n      sort: { fields: _createdAt, order: DESC }\r\n      limit: $limit\r\n      skip: $offset\r\n    ) {\r\n      nodes {\r\n        id\r\n        title\r\n        slug {\r\n          current\r\n        }\r\n        _rawDescription\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Categories({ data, pageContext }) {\r\n  const { currentPage, numberOfPages } = pageContext;\r\n  const categories = data.allSanityCategory.nodes;\r\n\r\n  return (\r\n    <>\r\n      <SEO title=\"Categories\" />\r\n      <PageSpace top={80} bottom={100}>\r\n        <div className=\"container\">\r\n          <PageHeader\r\n            title=\"All Categories\"\r\n            // description=\"\"\r\n          />\r\n          <CategoryGrid category={categories} />\r\n\r\n          {numberOfPages > 1 && (\r\n            <Pagination\r\n              currentPage={currentPage}\r\n              numberOfPages={numberOfPages}\r\n              baseURL=\"/categories\"\r\n            />\r\n          )}\r\n        </div>\r\n      </PageSpace>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Categories;\r\n"],"names":["PageHeaderStyles","styled","title","description","children","className","ParagraphText","PageSpaceStyles","props","top","bottom","PaginationStyles","baseURL","numberOfPages","currentPage","prevPage","toString","nextPage","to","clsx","ButtonStyles","Link","variant","buttonType","tag","as","CategoryGridStyles","CategoryItemStyles","slug","Title","MyPortableText","value","Button","current","category","map","item","key","id","_rawDescription","primary","secondary","outline","data","pageContext","categories","allSanityCategory","nodes"],"sourceRoot":""}